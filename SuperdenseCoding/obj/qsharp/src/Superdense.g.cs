//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.SuperdenseCoding\",\"Name\":\"TestDenseCoding\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"val0\"]},\"Type\":{\"Case\":\"Bool\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"val1\"]},\"Type\":{\"Case\":\"Bool\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":44}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Bool\"},{\"Case\":\"Bool\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.SuperdenseCoding\",\"Name\":\"TestDenseCoding\"},\"Attributes\":[],\"SourceFile\":\"/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.SuperdenseCoding\",\"Name\":\"Encode\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"val0\"]},\"Type\":{\"Case\":\"Bool\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":22}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"val1\"]},\"Type\":{\"Case\":\"Bool\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":31},\"Item2\":{\"Line\":1,\"Column\":35}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":49}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Bool\"},{\"Case\":\"Bool\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.SuperdenseCoding\",\"Name\":\"Encode\"},\"Attributes\":[],\"SourceFile\":\"/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.SuperdenseCoding\",\"Name\":\"Decode\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs\",\"Position\":{\"Item1\":61,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q0\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":20}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":32}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.SuperdenseCoding\",\"Name\":\"Decode\"},\"Attributes\":[],\"SourceFile\":\"/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs\",\"Position\":{\"Item1\":61,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.SuperdenseCoding
{
    [SourceLocation("/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs", OperationFunctor.Body, 8, 19)]
    public partial class TestDenseCoding : Operation<(Boolean,Boolean), QVoid>, ICallable
    {
        public TestDenseCoding(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Boolean,Boolean)>, IApplyData
        {
            public In((Boolean,Boolean) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "TestDenseCoding";
        String ICallable.FullName => "Quantum.SuperdenseCoding.TestDenseCoding";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<(IQArray<Qubit>,IQArray<Qubit>)> Microsoft__Quantum__Preparation__PrepareEntangledState
        {
            get;
            set;
        }

        protected ICallable<(Boolean,Boolean,Qubit), QVoid> Encode__
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit), QVoid> Decode__
        {
            get;
            set;
        }

        public override Func<(Boolean,Boolean), QVoid> __Body__ => (__in__) =>
        {
            var (val0,val1) = __in__;
#line hidden
            {
#line 10 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                var q0 = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 11 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                        var q1 = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 13 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                            Microsoft__Quantum__Preparation__PrepareEntangledState.Apply((new QArray<Qubit>(q0), new QArray<Qubit>(q1)));
#line 14 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                            Encode__.Apply((val0, val1, q0));
#line 15 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                            Decode__.Apply((q0, q1));
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(q1);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q0);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Preparation__PrepareEntangledState = this.__Factory__.Get<IUnitary<(IQArray<Qubit>,IQArray<Qubit>)>>(typeof(global::Microsoft.Quantum.Preparation.PrepareEntangledState));
            this.Encode__ = this.__Factory__.Get<ICallable<(Boolean,Boolean,Qubit), QVoid>>(typeof(Encode));
            this.Decode__ = this.__Factory__.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(Decode));
        }

        public override IApplyData __DataIn__((Boolean,Boolean) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Boolean val0, Boolean val1)
        {
            return __m__.Run<TestDenseCoding, (Boolean,Boolean), QVoid>((val0, val1));
        }
    }

    [SourceLocation("/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs", OperationFunctor.Body, 19, 62)]
    public partial class Encode : Operation<(Boolean,Boolean,Qubit), QVoid>, ICallable
    {
        public Encode(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Boolean,Boolean,Qubit)>, IApplyData
        {
            public In((Boolean,Boolean,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item3;
                }
            }
        }

        String ICallable.Name => "Encode";
        String ICallable.FullName => "Quantum.SuperdenseCoding.Encode";
        protected IUnitary<Qubit> I__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Y
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<(Boolean,Boolean,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (val0,val1,qubit) = __in__;
#line 21 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            var encoded = "";
#line 25 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            if ((!(val0) && !(val1)))
            {
#line 27 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                I__.Apply(qubit);
#line 28 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                encoded = "00";
            }

#line 33 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            if ((!(val0) && val1))
            {
#line 35 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                Microsoft__Quantum__Intrinsic__X.Apply(qubit);
#line 36 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                encoded = "01";
            }

#line 45 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            if ((val0 && !(val1)))
            {
#line 47 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                Microsoft__Quantum__Intrinsic__Z.Apply(qubit);
#line 48 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                encoded = "10";
            }

#line 54 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            if ((val0 && val1))
            {
#line 56 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                Microsoft__Quantum__Intrinsic__Y.Apply(qubit);
#line 57 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
                encoded = "11";
            }

#line 59 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            Message__.Apply(("Encoded: " + encoded));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.I__ = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.I));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Microsoft__Quantum__Intrinsic__Y = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Y));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__((Boolean,Boolean,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Boolean val0, Boolean val1, Qubit qubit)
        {
            return __m__.Run<Encode, (Boolean,Boolean,Qubit), QVoid>((val0, val1, qubit));
        }
    }

    [SourceLocation("/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs", OperationFunctor.Body, 62, -1)]
    public partial class Decode : Operation<(Qubit,Qubit), QVoid>, ICallable
    {
        public Decode(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "Decode";
        String ICallable.FullName => "Quantum.SuperdenseCoding.Decode";
        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (q0,q1) = __in__;
#line 65 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((q0, q1));
#line 66 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(q0);
#line 69 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            var result0 = Microsoft__Quantum__Measurement__MResetZ.Apply(q0);
#line 70 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            var result1 = Microsoft__Quantum__Measurement__MResetZ.Apply(q1);
#line 71 "/home/andres/Documents/GitHub/School/QuantumComputing/SuperdenseCoding/Superdense.qs"
            Message__.Apply((("Decoded: " + ((result0 == Result.One) ? "1" : "0")) + ((result1 == Result.One) ? "1" : "0")));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__((Qubit,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit q0, Qubit q1)
        {
            return __m__.Run<Decode, (Qubit,Qubit), QVoid>((q0, q1));
        }
    }
}